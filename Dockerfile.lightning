# Lightning-fast Railway Dockerfile - Pre-built dependencies strategy
FROM maven:3.9.6-eclipse-temurin-21-alpine AS dependencies

WORKDIR /app

# Copy Maven configuration
COPY .mvn .mvn
COPY pom.xml ./

# Download dependencies in a separate layer for maximum caching
RUN --mount=type=cache,target=/root/.m2 \
    mvn dependency:go-offline -B -q \
    -Dmaven.wagon.http.connectionTimeout=30000 \
    -Dmaven.wagon.http.readTimeout=60000 \
    || mvn dependency:resolve dependency:resolve-sources -B -q \
    -Dmaven.wagon.http.connectionTimeout=30000 \
    -Dmaven.wagon.http.readTimeout=60000 \
    || echo "Dependencies cached with warnings"

# Build stage
FROM maven:3.9.6-eclipse-temurin-21-alpine AS builder

WORKDIR /app

# Copy cached dependencies
COPY --from=dependencies /root/.m2 /root/.m2
COPY .mvn .mvn
COPY pom.xml ./
COPY src ./src

# Build with cached dependencies (should be very fast)
RUN mvn package -DskipTests -B -q -o \
    || mvn package -DskipTests -B -q

# Runtime stage - ultra-minimal
FROM eclipse-temurin:21-jre-alpine

WORKDIR /app

# Security: Create non-root user
RUN addgroup -g 1001 -S railway && \
    adduser -S railway -u 1001

# Copy JAR
COPY --from=builder /app/target/*.jar app.jar
RUN chown railway:railway app.jar

USER railway

EXPOSE 8080

# Railway-optimized startup
CMD ["java", \
     "-Xmx400m", \
     "-Xms200m", \
     "-XX:+UseSerialGC", \
     "-XX:MaxRAMPercentage=75", \
     "-XX:+TieredCompilation", \
     "-XX:TieredStopAtLevel=1", \
     "-XX:+UseStringDeduplication", \
     "-Djava.security.egd=file:/dev/./urandom", \
     "-Dspring.profiles.active=railway", \
     "-jar", "app.jar"]
